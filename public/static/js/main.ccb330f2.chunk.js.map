{"version":3,"sources":["types/types.js","reducers/authReducer.js","reducers/calendarReducer.js","reducers/uiReducer.js","reducers/rootReducer.js","store/store.js","components/helpers/fetch.js","components/helpers/prepareEvents.js","actions/events.js","actions/auth.js","hooks/useForm.js","components/auth/LoginScreen.js","components/auth/RegisterScreen.js","components/ui/Navbar.js","components/calendar/CalendarEvent.js","actions/ui.js","components/calendar/CalendarModal.js","components/ui/AddNewFab.js","components/ui/DeleteEventFab.js","components/calendar/CalendarScreen.js","components/loading/LoadingScreen.js","Routers/PrivateRouter.js","Routers/PublicRoute.js","Routers/AppRouter.js","CalendarApp.js","index.js"],"names":["types","initialState","checking","events","activeEvent","modalOpen","rootReducer","combineReducers","ui","state","action","type","calendar","payload","map","e","id","filter","auth","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","baseURL","process","fetchNotToken","endpoint","data","method","url","fetch","headers","body","JSON","stringify","fetchWithToken","token","localStorage","getItem","prepareEvents","end","moment","toDate","start","eventAddNew","event","eventClearActiveEvent","eventUpdated","eventDeleted","eventLoaded","checkingFinish","login","user","startLogout","dispatch","clear","logout","useForm","useState","values","setValues","reset","handleInputChange","target","name","value","LoginScreen","useDispatch","lEmail","lPassword","formLoginValues","handleLoginInputChange","onSubmit","email","password","preventDefault","a","resp","json","ok","setItem","Date","getTime","uid","Swal","fire","msg","placeholder","onChange","className","to","RegisterScreen","rName","rEmail","rPassword1","rPassword2","formRegisterValues","handleRegisterInputChange","Navbar","useSelector","onClick","CalendarEvent","title","uiOpenModal","customStyles","content","top","left","right","bottom","marginRight","transform","Modal","setAppElement","now","minutes","second","add","nowPlus1","clone","initEvent","notes","CalendarModal","dateStart","setDateStart","dateEnd","setDateEnd","titleValid","setTitleValid","formValues","setFormValues","useEffect","closeModal","isOpen","onRequestClose","style","closeTimeoutMS","overlayClassName","momentStart","momentEnd","isSameOrAfter","trim","length","console","log","getState","_id","eventStartAddNew","minDate","autoComplete","rows","AddNewFab","DeleteEventFab","localizer","momentLocalizer","CalendarScreen","lastView","setLastView","startAccessor","endAccessor","eventPropGetter","isSelected","backgroundColor","borderRadius","opacity","display","color","onDoubleClickEvent","onSelectEvent","onView","onSelectSlot","selectable","view","components","LoadingScreen","PrivateRouter","isAuthenticated","Component","component","rest","props","prototype","PropTypes","bool","isRequired","func","PublicRouter","AppRouter","exact","path","CalendarApp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ccb330f2.chunk.js","sourcesContent":["export const types = {\r\n\r\n    uiOpenModal: '[ui] Open Modal',\r\n    uiCloseModal: '[ui] Close Modal',\r\n\r\n    eventStartAddNew: '[event] Start Add new',\r\n\r\n    eventLogout: '[event] Logout event',\r\n\r\n    eventSetActive: '[event] Set Active',\r\n    eventAddNew: '[event] Add new',\r\n    eventClearActiveEvent: '[event] Clear active event',\r\n    eventUpdated: '[event] event updated',\r\n    eventDeleted: '[event] event deleted',\r\n    eventLoaded: '[event] event loaded',\r\n\r\n    authCheckingFinish: '[auth] Finish checking login state',\r\n    authStartLogin: '[auth] Star login',\r\n    authLogin: '[auth] Login',\r\n    authStartRegister: '[auth] Start Register',\r\n    authStartTokenRenew: '[auth] Start token renew',\r\n    authLogout: '[auth]Logout',\r\n}","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    checking: true,\r\n    // uid: null,\r\n    // name: null\r\n}\r\n\r\nexport const authReducer = ( state = initialState, action ) =>{\r\n    switch ( action.type ) {\r\n        case types.authLogin:\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n                checking: false\r\n            }\r\n        case types.authCheckingFinish:\r\n            return {\r\n                ...state,\r\n                checking: false\r\n            }\r\n        case types.authLogout:\r\n            return {\r\n                checking: false\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import { types } from \"../types/types\";\r\n\r\n// {\r\n//     id: new Date().getTime(),\r\n//     title: 'Cumpleaños de mi amorcito',\r\n//     start: moment().toDate(), //newDate\r\n//     end: moment().add(2, 'hours').toDate(),\r\n//     bgcolor: '#fafafa',\r\n//     notes: 'debo de darle una sorpresa',\r\n//     user:{\r\n//         _id: '123',\r\n//         name:'Daniel'\r\n//     }\r\n// },\r\n\r\nconst initialState = {\r\n    events:[],\r\n    activeEvent: null\r\n};\r\n\r\nexport const calendarReducer = ( state = initialState, action) => {\r\n    switch (action.type) {\r\n        case types.eventSetActive:\r\n            return{\r\n                ...state,\r\n                activeEvent: action.payload\r\n            }\r\n        case types.eventAddNew:\r\n            return{\r\n                ...state,\r\n                events: [\r\n                    ...state.events,\r\n                    action.payload\r\n                ]\r\n            }\r\n        case types.eventClearActiveEvent:\r\n            return{\r\n                ...state,\r\n                activeEvent: null\r\n            }\r\n        case types.eventUpdated:\r\n            return{\r\n                ...state,\r\n                events: state.events.map(\r\n                    e => ( e.id === action.payload.id ) ? action.payload : e\r\n                )\r\n                //adentro tenemos un evento y si es igual al evento que quiero modificar me regresara el acti.pay y sino no existe el evento\r\n            }\r\n        case types.eventDeleted:\r\n            return{\r\n                ...state,\r\n                events: state.events.filter(\r\n                    e => ( e.id !== state.activeEvent.id )\r\n                ),\r\n                activeEvent: null\r\n            }\r\n        case types.eventLoaded:\r\n            return {\r\n                ...state,\r\n                events: [ ...action.payload ]\r\n            }\r\n        case types.eventLogout:\r\n            return {\r\n                ...initialState\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import { types } from \"../types/types\"\r\n\r\nconst initialState = {\r\n    modalOpen: false,\r\n}\r\n\r\nexport const uiReducer = (state = initialState, action) => {\r\n    switch ( action.type ) {\r\n        case types.uiOpenModal:\r\n            return{\r\n                ...state,\r\n                modalOpen: true\r\n            }\r\n\r\n        case types.uiCloseModal:\r\n            return{\r\n                ...state,\r\n                modalOpen: false\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}","import { combineReducers } from 'redux';\r\nimport { authReducer } from './authReducer';\r\nimport { calendarReducer } from './calendarReducer';\r\n\r\nimport { uiReducer } from './uiReducer';\r\n\r\n\r\nexport const rootReducer = combineReducers({\r\n    ui: uiReducer,\r\n    // TODO: AutReducer,\r\n    calendar: calendarReducer,\r\n    auth: authReducer\r\n})","import { createStore, compose, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport { rootReducer } from '../reducers/rootReducer';\r\n\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\nexport const store = createStore(\r\n    rootReducer,\r\n    composeEnhancers(\r\n        applyMiddleware( thunk )\r\n    )\r\n);","const baseURL = process.env.REACT_APP_API_URL;\r\n\r\n\r\nconst fetchNotToken =(endpoint, data, method = 'GET') =>{\r\n\r\n    const url = `${baseURL}/${endpoint}`;//localhost:4000/api/\r\n\r\n    if ( method === 'GET' ){\r\n        return fetch( url );\r\n    } else {\r\n        return fetch(url, {\r\n            method,\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            },\r\n            body: JSON.stringify( data )\r\n        });\r\n    }\r\n}\r\n\r\nconst fetchWithToken =(endpoint, data, method = 'GET') =>{\r\n\r\n    const url = `${baseURL}/${endpoint}`;//localhost:4000/api/\r\n    const token = localStorage.getItem('token' || '');\r\n\r\n    if ( method === 'GET' ){\r\n        return fetch( url, {\r\n            headers: {\r\n                'x-token': token\r\n            }\r\n        }\r\n            );\r\n    } else {\r\n        return fetch(url, {\r\n            method,\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                'x-token': token\r\n            },\r\n            body: JSON.stringify( data )\r\n        });\r\n    }\r\n}\r\n\r\nexport {\r\n    fetchNotToken,\r\n    fetchWithToken\r\n}","import moment from \"moment\";\r\n\r\n\r\nexport const prepareEvents = ( events = [] ) =>{\r\n    //para pasar las fechas de string objetos tipo date\r\n    return events.map(\r\n        (e) =>({\r\n            ...e,\r\n            end: moment( e.end ).toDate(),\r\n            start: moment( e.start ).toDate(),\r\n        })\r\n    );\r\n}","import Swal from \"sweetalert2\";\r\nimport { fetchWithToken } from \"../components/helpers/fetch\";\r\nimport { prepareEvents } from \"../components/helpers/prepareEvents\";\r\nimport { types } from \"../types/types\";\r\n\r\nexport const eventStartAddNew = (event) => {\r\n    return async(dispatch, getState) => {\r\n\r\n        const { uid, name } = getState().auth;//otra forma de optener el state\r\n\r\n        try {\r\n            const resp = await fetchWithToken('events', event, 'POST');\r\n            //primero va la direccion de ruta o el path, luego el payload y de ultimo el tipo de accion a realizar\r\n            const body = await resp.json();\r\n\r\n            if(body.ok) {\r\n                event.id = body.event.id;\r\n                event.user = {\r\n                    _id: uid,\r\n                    name: name\r\n                }\r\n                console.log(event)\r\n                dispatch(eventAddNew( event ));\r\n            }\r\n        }catch(error){\r\n            console.log(error)\r\n        }\r\n    }\r\n}\r\n\r\n\r\nconst eventAddNew = (event) =>({\r\n    type: types.eventAddNew,\r\n    payload: event\r\n});\r\n\r\nexport const eventSetActive = (event) =>({\r\n    type: types.eventSetActive,\r\n    payload: event\r\n});\r\n\r\nexport const eventClearActiveEvent = () =>({ type: types.eventClearActiveEvent });\r\n\r\nexport const eventStartUpdated = (event) =>{\r\n    return async(dispatch) =>{\r\n        try {\r\n            const resp = await fetchWithToken( `events/${ event.id }`, event, 'PUT' );\r\n            const body  = await resp.json();\r\n\r\n            if( body.ok ) {\r\n                dispatch( eventUpdated( event ) );\r\n            }else{\r\n                Swal.fire('Error', body.msg, 'error');\r\n            }\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n}\r\n\r\nconst eventUpdated = (event) =>({\r\n    type: types.eventUpdated,\r\n    payload: event\r\n})\r\n\r\nexport const eventStartDeleted = () =>{\r\n    //el event no se puede tomar de las variables porque el boton propiamente del evento no la necesita para foncionar necesita es la caja o  nota a la que apunta en ese momento\r\n    return async ( dispatch, getState ) => {\r\n\r\n        const { id } = getState().calendar.activeEvent;\r\n\r\n        try {\r\n            const resp = await fetchWithToken( `events/${ id }`, {}, 'DELETE' );\r\n            const body  = await resp.json();\r\n\r\n            if( body.ok ) {\r\n                dispatch( eventDeleted() );\r\n            }else{\r\n                Swal.fire('Error', body.msg, 'error');\r\n            }\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n}\r\n\r\nconst eventDeleted = () =>({ type: types.eventDeleted })\r\n\r\nexport const eventStartLoading = () =>{\r\n    return async(dispatch) =>{\r\n\r\n        try {\r\n            const resp = await fetchWithToken('events');\r\n            const body = await resp.json();\r\n\r\n            const events = prepareEvents(body.events);\r\n\r\n            dispatch( eventLoaded( events ) );\r\n\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n\r\n    }\r\n}\r\n\r\nconst eventLoaded = (events) =>({\r\n    type: types.eventLoaded,\r\n    payload: events\r\n})\r\n\r\nexport const eventLogout = () =>({type: types.eventLogout});","import Swal from \"sweetalert2\";\r\nimport { fetchNotToken, fetchWithToken } from \"../components/helpers/fetch\";\r\nimport { types } from \"../types/types\";\r\nimport { eventLogout } from \"./events\";\r\n\r\nexport const startLogin = (email, password) =>{\r\n\r\n    return async( dispatch ) =>{\r\n        const resp = await fetchNotToken('auth', { email,password }, 'POST');\r\n\r\n        const body = await resp.json();\r\n\r\n        if( body.ok ){\r\n            //grabamos en el localstorage\r\n            localStorage.setItem('token', body.token);\r\n            localStorage.setItem('token-init-date', new Date().getTime());\r\n\r\n            dispatch(login({\r\n                uid: body.uid,\r\n                name: body.name\r\n            }));\r\n        } else{\r\n            Swal.fire('Error',  body.msg, 'error' );\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const startRegister = (email, password, name) =>{\r\n    //recuerda si tiene dispatch como parametro es porque la accion a ejecutar es asincrona y nos ayudamos del thunk para llamarla\r\n    return async ( dispatch ) =>{\r\n        const resp = await fetchNotToken('auth/new', { email,password, name }, 'POST');\r\n\r\n        const body = await resp.json();\r\n\r\n        if( body.ok ){\r\n            //grabamos en el localstorage\r\n            localStorage.setItem('token', body.token);\r\n            localStorage.setItem('token-init-date', new Date().getTime());\r\n\r\n            dispatch(login({\r\n                uid: body.uid,\r\n                name: body.name\r\n            }));\r\n        } else{\r\n            Swal.fire('Error',  body.msg, 'error' );\r\n        }\r\n    }\r\n}\r\n\r\nexport const startChecking = () =>{\r\n    return async(dispatch)=>{\r\n        const resp = await fetchWithToken('auth/renew');\r\n\r\n        const body = await resp.json();\r\n\r\n        if( body.ok ){\r\n            //grabamos en el localstorage\r\n            localStorage.setItem('token', body.token);\r\n            localStorage.setItem('token-init-date', new Date().getTime());\r\n\r\n            dispatch(login({\r\n                uid: body.uid,\r\n                name: body.name\r\n            }));\r\n        } else{\r\n            dispatch(checkingFinish());\r\n        }\r\n\r\n    }\r\n}\r\n\r\nconst checkingFinish = () =>({type: types.authCheckingFinish});\r\n\r\nconst login = (user) => ({\r\n    type: types.authLogin,\r\n    payload: user\r\n});\r\n\r\nexport const startLogout = () => {\r\n    return ( dispatch ) => {\r\n        localStorage.clear();\r\n        // para borrar todo del localStorage\r\n        dispatch(eventLogout());\r\n        //para des seleccionar una nota a la hora de desloguearme\r\n        dispatch( logout() );\r\n    }\r\n}\r\n\r\nconst logout = () => ({ type: types.authLogout })","import { useState } from 'react';\r\n\r\nexport const useForm = ( initialState = {} ) => {\r\n\r\n    const [values, setValues] = useState(initialState)\r\n\r\n    const reset = ()=> {\r\n        setValues(initialState);\r\n    }\r\n\r\n    const handleInputChange = ({ target })=>{\r\n        setValues({\r\n            ...values,\r\n            [target.name]:target.value\r\n        });\r\n\r\n    }\r\n\r\n    return [ values, handleInputChange, reset ];\r\n}","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { Link } from \"react-router-dom\";\r\nimport { startLogin } from '../../actions/auth';\r\nimport { useForm } from '../../hooks/useForm';\r\n\r\nimport  './LoginScreen.css';\r\n\r\nexport const LoginScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const [ formLoginValues, handleLoginInputChange ] = useForm({\r\n        lEmail: 'daniel@gmail.com',\r\n        lPassword: '123456'\r\n    });\r\n\r\n    const { lEmail,  lPassword } = formLoginValues;\r\n\r\n    const handleLogin = ( e ) => {\r\n        e.preventDefault();\r\n\r\n        dispatch(startLogin( lEmail, lPassword ));\r\n    }\r\n\r\n    return (\r\n        <div id=\"login\">\r\n            <form onSubmit={ handleLogin } >\r\n                <h1>Sign In</h1>\r\n                <input\r\n                type=\"text\"\r\n                placeholder=\"Username\"\r\n                name=\"lEmail\"\r\n                value={ lEmail }\r\n                onChange={ handleLoginInputChange }\r\n                />\r\n                <input\r\n                type=\"password\"\r\n                placeholder=\"Password\"\r\n                name=\"lPassword\"\r\n                value={ lPassword }\r\n                onChange={ handleLoginInputChange }\r\n                />\r\n                <button type=\"submit\">Sign in</button>\r\n                <h2>If you don't have an account please <Link className=\"login-link\" to=\"/register\">register here</Link></h2>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport Swal from 'sweetalert2';\r\nimport { useDispatch } from 'react-redux';\r\nimport { Link } from \"react-router-dom\";\r\nimport { useForm } from '../../hooks/useForm';\r\n\r\nimport  './RegisterScreen.css';\r\nimport { startRegister } from '../../actions/auth';\r\n\r\nexport const RegisterScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const [ formRegisterValues, handleRegisterInputChange ] = useForm({\r\n        rName: 'Felipe',\r\n        rEmail: 'Felipe@gmail.com',\r\n        rPassword1: '123456',\r\n        rPassword2: '123456'\r\n    });\r\n\r\n    const { rName ,rEmail, rPassword1, rPassword2 } = formRegisterValues;\r\n\r\n    const handleRegister = ( e ) => {\r\n        e.preventDefault();\r\n\r\n        if ( rPassword1 !== rPassword2 ){\r\n            return Swal.fire('Error', 'Passwords must be the same', 'error')\r\n        }\r\n\r\n        dispatch(startRegister( rEmail, rPassword1, rName ));\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div id=\"register\">\r\n            <form onSubmit={ handleRegister }>\r\n                <h1>Register</h1>\r\n                <input\r\n                type=\"text\"\r\n                placeholder=\"Username\"\r\n                name=\"rName\"\r\n                value={ rName }\r\n                onChange={ handleRegisterInputChange }\r\n                />\r\n                <input\r\n                type=\"email\"\r\n                placeholder=\"Email\"\r\n                name=\"rEmail\"\r\n                value={ rEmail }\r\n                onChange={ handleRegisterInputChange }\r\n                />\r\n                <input\r\n                type=\"password\"\r\n                placeholder=\"Password\"\r\n                name=\"rPassword1\"\r\n                value={ rPassword1 }\r\n                onChange={ handleRegisterInputChange }\r\n                />\r\n                <input\r\n                type=\"password\"\r\n                placeholder=\"Repeat password\"\r\n                name=\"rPassword2\"\r\n                value={ rPassword2 }\r\n                onChange={ handleRegisterInputChange }\r\n                />\r\n                <button type=\"submit\">Register</button>\r\n                <h2>If you have already registered, go to <Link className=\"login-link\" to=\"/login\">sign in </Link></h2>\r\n            </form>\r\n        </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { startLogout } from '../../actions/auth';\r\n\r\nexport const Navbar = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const { name } = useSelector(state => state.auth);\r\n\r\n    const handleLogout = () => {\r\n        dispatch( startLogout() );\r\n    }\r\n\r\n    return (\r\n        <div className=\"navbar navbar-dark bg-dark mb4\" >\r\n            <span className=\"navbar-brand\" >\r\n                { name }\r\n            </span>\r\n\r\n            <button\r\n            className=\"btn btn-outline-danger\"\r\n            onClick={ handleLogout }\r\n            >\r\n                <i className=\"fas fa-sign-out-alt\"></i>\r\n                <span> Logout</span>\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport const CalendarEvent = ({event}) => {\r\n\r\n    const { title, user } = event;\r\n    return (\r\n        <div>\r\n            <strong> { title } </strong>\r\n            <span>-{ user.name } </span>\r\n        </div>\r\n    )\r\n}\r\n","import { types} from '../types/types';\r\n\r\n\r\nexport const uiOpenModal = () =>({\r\n    type: types.uiOpenModal\r\n});\r\n\r\nexport const uiCloseModal = () =>({\r\n    type: types.uiCloseModal\r\n});","import React, { useEffect, useState } from 'react';\r\nimport Modal from 'react-modal';\r\nimport DateTimePicker from 'react-datetime-picker';\r\nimport moment from 'moment';\r\nimport Swal from 'sweetalert2';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { uiCloseModal } from '../../actions/ui';\r\nimport { eventClearActiveEvent, eventStartAddNew, eventStartUpdated } from '../../actions/events';\r\n\r\n\r\nconst customStyles = {\r\n    content: {\r\n        top: '50%',\r\n        left: '50%',\r\n        right: 'auto',\r\n        bottom: 'auto',\r\n        marginRight: '-50%',\r\n        transform: 'translate(-50%, -50%)',\r\n    },\r\n};\r\nModal.setAppElement('#root');\r\n\r\nconst now= moment().minutes(0).second(0).add(1,'hours');//11:33\r\n\r\nconst nowPlus1 = now.clone().add(1, 'hours');\r\n\r\n\r\nconst initEvent = {\r\n    title: '',\r\n    notes: '',\r\n    start: now.toDate(),\r\n    end: nowPlus1.toDate()\r\n}\r\n\r\nexport const CalendarModal = () => {\r\n\r\n    const { modalOpen } = useSelector(state => state.ui);\r\n    const { activeEvent } = useSelector(state => state.calendar);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const [dateStart, setDateStart] = useState(  now.toDate() );\r\n\r\n    const [dateEnd, setDateEnd] = useState(  nowPlus1.toDate()  );\r\n\r\n    const [titleValid, setTitleValid] = useState(true);\r\n\r\n    const [formValues, setFormValues] = useState( initEvent );//ponemos initEvent por fuera como constant para que no se este dibujando constantemente\r\n\r\n    const { notes, title, start, end } = formValues;\r\n\r\n    useEffect(() => {\r\n        if ( activeEvent ) {\r\n            setFormValues( activeEvent );\r\n        }else{\r\n            setFormValues( initEvent );\r\n        }//con esto me quito la nota borrada del activeEvent en caso sea borrada al undir solo un click\r\n    }, [activeEvent])\r\n\r\n    const handleInputChange = ({ target }) =>{\r\n\r\n        setFormValues({\r\n            ...formValues,\r\n            [target.name]: target.value\r\n        })\r\n    }\r\n\r\n    const handleStartDateChange = ( e ) =>{\r\n        setDateStart( e );\r\n        setFormValues({\r\n            ...formValues,\r\n            start: e\r\n        })\r\n    }\r\n\r\n    const handleEndDateChange = ( e ) =>{\r\n        setDateEnd( e );\r\n        setFormValues({\r\n            ...formValues,\r\n            end: e\r\n        })\r\n    }\r\n\r\n    const  handleSubmitForm = (e) =>{\r\n        e.preventDefault();\r\n\r\n        const momentStart = moment( start );\r\n        const momentEnd = moment( end );\r\n        //validacion para que no coincidan horas\r\n        if ( momentStart.isSameOrAfter( momentEnd ) ){\r\n            return Swal.fire('Error','The end date must be greater than the start date', 'error');\r\n        }//validacion para tener un titulo\r\n        if(title.trim().length < 2){\r\n            return setTitleValid(false);\r\n\r\n        }\r\n\r\n        if( activeEvent ) {\r\n            dispatch( eventStartUpdated(formValues) );\r\n            //si selecciono una carta  con activeEvent retorname de nuevo el formulario para cambiarlo\r\n        }else{\r\n            dispatch(eventStartAddNew( formValues ));\r\n            // de lo contrario creame una accion nueva\r\n        }\r\n\r\n\r\n        setTitleValid(true);\r\n        closeModal();\r\n    }\r\n\r\n    const closeModal = () =>{\r\n        // console.log('cerrar modal');\r\n        dispatch( uiCloseModal() );\r\n        setFormValues( initEvent );\r\n        dispatch( eventClearActiveEvent() );\r\n    }\r\n\r\n    return (\r\n        <Modal\r\n        isOpen={ modalOpen }\r\n        // onAfterOpen={ afterOpenModal }\r\n        onRequestClose={ closeModal }\r\n        style={ customStyles }\r\n        closeTimeoutMS={ 200 }\r\n        className=\"modal\"\r\n        overlayClassName=\"modal-fondo\"\r\n        >\r\n            <h1>{ (activeEvent) ? 'Edit event' : 'New event' }</h1>\r\n            <hr />\r\n            <form\r\n            className=\"container\"\r\n            onSubmit={ handleSubmitForm }\r\n            >\r\n\r\n                <div className=\"form-group\">\r\n                    <label>Start date and time</label>\r\n                    <DateTimePicker\r\n                    onChange={ handleStartDateChange }\r\n                    value={ dateStart }\r\n                    className=\"form-control\"\r\n                    />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label>End date and time</label>\r\n                    <DateTimePicker\r\n                    onChange={ handleEndDateChange }\r\n                    value={ dateEnd }\r\n                    minDate={ dateStart }\r\n                    className=\"form-control\"\r\n                    />\r\n                </div>\r\n\r\n                <hr />\r\n                <div className=\"form-group\">\r\n                    <label>Title and notes</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        className={`form-control  ${ !titleValid && 'is-invalid' }`}\r\n                        placeholder=\"Event title\"\r\n                        name=\"title\"\r\n                        autoComplete=\"off\"\r\n                        value={ title }\r\n                        onChange={ handleInputChange }\r\n                    />\r\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">A short description</small>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <textarea\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        placeholder=\"Notes\"\r\n                        rows=\"5\"\r\n                        name=\"notes\"\r\n                        value={ notes }\r\n                        onChange={ handleInputChange }\r\n                    ></textarea>\r\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">Additional Information</small>\r\n                </div>\r\n\r\n                <button\r\n                    type=\"submit\"\r\n                    className=\"btn btn-outline-primary btn-block\"\r\n                >\r\n                    <i className=\"far fa-save\"></i>\r\n                    <span> Save </span>\r\n                </button>\r\n\r\n            </form>\r\n        </Modal>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch } from 'react-redux';\r\nimport { uiOpenModal } from '../../actions/ui';\r\n\r\nexport const AddNewFab = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const handleClickNew = () =>{\r\n        dispatch( uiOpenModal() );\r\n    }\r\n\r\n    return (\r\n        <button\r\n            className=\"btn btn-primary fab\"\r\n            onClick={ handleClickNew }\r\n        >\r\n            <i className=\"fas fa-plus\"></i>\r\n        </button>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { eventStartDeleted } from '../../actions/events';\r\n\r\nexport const DeleteEventFab = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const handleDelete = () => {\r\n        dispatch( eventStartDeleted() );\r\n    }\r\n\r\n    return (\r\n        <button\r\n        className=\"btn btn-danger fab-danger\"\r\n        onClick={ handleDelete }\r\n        >\r\n            <i className=\"fas fa-trash\" ></i>\r\n            <span> Delete Event</span>\r\n        </button>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Calendar, momentLocalizer } from 'react-big-calendar';\r\nimport moment from 'moment';\r\n// import 'moment/locale/es';dias en español\r\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\r\n\r\n// import { messages } from '../helpers/calendar-message-español'; si quieres \"traducir el calendario es con esto\"\r\n\r\nimport { Navbar } from '../ui/Navbar';\r\nimport { CalendarEvent } from './CalendarEvent';\r\nimport { CalendarModal } from './CalendarModal';\r\nimport { uiOpenModal } from '../../actions/ui';\r\nimport { eventClearActiveEvent, eventSetActive, eventStartLoading } from '../../actions/events';\r\nimport { useDispatch } from 'react-redux';\r\nimport { AddNewFab } from '../ui/AddNewFab';\r\nimport { useSelector } from 'react-redux';\r\nimport { DeleteEventFab } from '../ui/DeleteEventFab';\r\n\r\n\r\n// moment.locale('es');para cambiar el nombre de las fechas a español\r\nconst localizer = momentLocalizer(moment); //or globalizerlocalizer\r\n\r\n// const events =[\r\n//     {\r\n//     title: 'Cumpleaños de mi amorcito',\r\n//     start: moment().toDate(), //newDate\r\n//     end: moment().add(2, 'hours').toDate(),\r\n//     bgcolor: '#fafafa',\r\n//     notes: 'debo de darle una sorpresa',\r\n//     user:{\r\n//         _id: '123',\r\n//         name:'Daniel'\r\n//     }\r\n\r\n// },\r\n// ];\r\n\r\nexport const CalendarScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const  { events, activeEvent }  = useSelector(state => state.calendar);\r\n\r\n    const  { uid }  = useSelector(state => state.auth);\r\n\r\n    const [lastView, setLastView] = useState(localStorage.getItem('lastView') || 'month' );\r\n\r\n    useEffect(() => {\r\n        dispatch( eventStartLoading() );\r\n\r\n    }, [dispatch])\r\n\r\n    const onDoubleClick = (e) => {\r\n        // console.log(e)\r\n        console.log('abrir modal');\r\n        dispatch( uiOpenModal() );\r\n    }\r\n\r\n    const onSelectEvent = (e) => {\r\n        // console.log(e);\r\n        // console.log('click');\r\n        dispatch( eventSetActive(e) );\r\n\r\n    }\r\n\r\n    const onViewChange = (e) => {\r\n        setLastView(e);\r\n        localStorage.setItem('lastView', e);\r\n        //guardo info en el storage en este  caso dice guardame la ultima vista para cuando cargue la pag siempre este en lo ultimo que vi.\r\n    }\r\n\r\n    const onSelectSlot = (e) =>{\r\n        // si quieres dar click en cualquier parte del calendario y editarlo esta es la funsion como plus\r\n        dispatch( eventClearActiveEvent(e) );\r\n\r\n    }\r\n\r\n    const eventStyleGetter = ( event, start, end, isSelected ) =>{\r\n        // console.log(event, start, end, isSelected);\r\n\r\n        const style = {\r\n            backgroundColor: ( uid === event.user._id ) ? '#2b3c4c' : '#367CF7',\r\n            borderRadius: '0px',\r\n            opacity: 0.8,\r\n            display: 'block',\r\n            color: 'white'\r\n        }\r\n\r\n        return {\r\n            style\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"calendar-screen\">\r\n            <Navbar />\r\n\r\n            <Calendar\r\n                localizer={ localizer }\r\n                events={ events }\r\n                startAccessor=\"start\"\r\n                endAccessor=\"end\"\r\n                // messages={ messages }\r\n                eventPropGetter={ eventStyleGetter }\r\n                onDoubleClickEvent= { onDoubleClick }\r\n                onSelectEvent= { onSelectEvent }\r\n                onView= { onViewChange }\r\n                onSelectSlot={ onSelectSlot }\r\n                selectable={ true }\r\n                view= { lastView }\r\n                components={{\r\n                    event: CalendarEvent\r\n                }}\r\n                />\r\n\r\n                <AddNewFab />\r\n\r\n                {\r\n                    ( activeEvent ) &&       <DeleteEventFab />\r\n                }\r\n\r\n                <CalendarModal />\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\n\r\nimport  './LoadingScreen.css';\r\n\r\nexport const LoadingScreen = () => {\r\n    return (\r\n        <div>\r\n            <p>l</p>\r\n            <p>o</p>\r\n            <p>a</p>\r\n            <p>d</p>\r\n            <p>i</p>\r\n            <p>n</p>\r\n            <p>g</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types'\r\nimport { Redirect, Route } from 'react-router-dom';\r\n\r\nexport const PrivateRouter = ({\r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest//con esto digo que el resto de componentes retornen aqui comoel path exact etc etc... con rest\r\n}) => {\r\n\r\n    return (\r\n        <Route { ...rest }\r\n            component={ (props) =>(\r\n                (isAuthenticated)\r\n                ?(<Component {...props} />)\r\n                :(<Redirect to=\"/login\" />)\r\n\r\n            )}\r\n        />\r\n    )\r\n}\r\n//para condicionar\r\nPrivateRouter.prototype = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types'\r\nimport { Redirect, Route } from 'react-router-dom';\r\n\r\nexport const PublicRouter = ({\r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest//con esto digo que el resto de componentes retornen aqui comoel path exact etc etc... con rest\r\n}) => {\r\n\r\n\r\n    return (\r\n        <Route { ...rest }\r\n            component={ (props) =>(\r\n                (isAuthenticated)\r\n                ?(<Redirect to=\"/\" />)//mandalo a la app de anoticones\r\n                :(<Component {...props} />)\r\n            )}\r\n\r\n\r\n        />\r\n    )\r\n}\r\n//para condicionar\r\nPublicRouter.prototype = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}","import React, { useEffect } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { useDispatch } from 'react-redux';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Redirect\r\n} from \"react-router-dom\";\r\nimport { startChecking } from '../actions/auth';\r\nimport { LoginScreen } from '../components/auth/LoginScreen';\r\nimport { RegisterScreen } from '../components/auth/RegisterScreen';\r\nimport { CalendarScreen } from '../components/calendar/CalendarScreen';\r\nimport { LoadingScreen } from '../components/loading/LoadingScreen';\r\nimport { PrivateRouter } from './PrivateRouter';\r\nimport { PublicRouter } from './PublicRoute';\r\n\r\n\r\nexport const AppRouter = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const { checking, uid } = useSelector(state => state.auth);\r\n\r\n    useEffect(() => {\r\n        dispatch(startChecking());\r\n    }, [dispatch]);\r\n\r\n    if(checking) {\r\n        return <LoadingScreen />\r\n    }\r\n    return (\r\n        <div>\r\n            <Router>\r\n                <Switch>\r\n                    <PublicRouter exact path=\"/login\" component={ LoginScreen  }\r\n                    isAuthenticated={ !!uid }\r\n                    //con el doble admiracion significa pasar de string a buleano\r\n                    />\r\n                    <Route exact path=\"/register\" component={ RegisterScreen } />\r\n                    <PrivateRouter exact path=\"/\" component={ CalendarScreen }\r\n                    isAuthenticated={ !!uid }\r\n                    //con el doble admiracion significa pasar de string a buleano\r\n                    />\r\n                    <Redirect to=\"/\" />\r\n                </Switch>\r\n            </Router>\r\n        </div>\r\n    )\r\n\r\n}\r\n","import React from 'react';\r\nimport { Provider } from 'react-redux';\r\n\r\nimport { store } from './store/store';\r\nimport { AppRouter } from './Routers/AppRouter';\r\n\r\nexport const CalendarApp = () => {\r\n    return (\r\n        <Provider store={ store }>\r\n            <AppRouter />\r\n        </Provider>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport { CalendarApp } from './CalendarApp';\n\nReactDOM.render(\n    <CalendarApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}